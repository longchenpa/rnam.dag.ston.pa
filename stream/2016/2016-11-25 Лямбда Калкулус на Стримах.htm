<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2016-11-25</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2016-11-25</a>
</nav>
<main>
    <section>
        <h3>Лямбда Калкулус на Стримах</h3>

<p>Кто кушал вкус свободных монад, тот знает, что все синтаксические деревья имеют
свои интерпретаторы. Деревьями мы кодируем FSM выразимые тем, что мы называем
"данными", а CPS-интерпретаторы мы называем "кодом". Выполнение кода каждого
хендлера такой синтаксической единицы мы называем 1 тактом выполнения в
интерпретаторе. В процессе интерпретации программы мы вызываем poll у текущего
элемента в дереве и он вызывает poll у детей вниз по синтаксическому дереву,
попутно выполняя редукции и создавая матрешки контекстов, которые и есть env.</p>

<p>Плюсы такой системы: интеграция интерпретатора и паралелизатора стримов с
интерпретатором лямбда калкулуса в единую библиотеку комбинаторов. Наряду с
векторизирующими Fold, Map, Over, Scan, Filter комбинаторами мы имеем Lambda,
Call, Cond, Assign. Дальше синтаксические конструкции дерева могут расширятся —
мы просто ложим файл хендлер единой функции poll соотв. комбинатора.</p>

<p>Посмотрел бегло интернет но такого чтобы имплементации такого интерпретатора —
то нет, не найти. Може я гоню или идея ок? Простой и элегантный векторизирующий
лямбда интерпретатор. В таком интерпретаторе имплементация размазана по веткам
дерева, в отличие от классических интерпретаторов об одном switch.</p>

<p>Может кто знает пейперы какие есть?</p>

    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
</body>
</html>
