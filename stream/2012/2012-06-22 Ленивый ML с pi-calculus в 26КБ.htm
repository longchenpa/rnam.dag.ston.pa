<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content=""/>
    <meta name="author" content="Namdak Tonpa"/>
    <title>2009-05-21</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2012-06-22</a>
</nav>
<main>
    <section>
        <h3>Ленивый ML с π-calculus в 26КБ</h3>

<p>Написал ленивый Эрланг (:</p>

<figure><code>./ml.exe spawn.ml
Synrc ML Jun 2012
let rec
    run = lambda nn. output ! spawn let rec
        from = lambda n. output ! n -> if n = 1 then stop else from n - 1
     in from 10 -> if nn = 1 then stop else run nn - 1
 in run 3000000

2 processes left
36000001 evals, procs: 3000000
6000007 env cells used, 0 cells used
execution time: 3.05s</code></figure>

<p>Создание 3 миллионов потоков занимает 3 секунды. Потоки выводят числа от 1 до
10. но поскольку вывод отключен и ленивость то это отрабатывает за 3 секунды.
Если отключить ленивость то 5 тыс процессов отрабатывают вывод в канал за 2
секунды. Надо быстрее!</p>

<h4>Решето Эратосфена</h4>

<figure><code>let rec
 from = lambda n. fromchan ! n -> if n = 10 then stop else from (n+1),
 fromchan = chan,
 sieve = lambda inch.
   inch ? p -> output ! p ->
   let rec
     filter = inch?x ->
       if (x/p) * p <> x then connect!x -> filter
                     else filter,
     connect = chan
   in (filter || sieve connect)
in  from 2 || sieve fromchan</code></figure>

<h4>Реверс масива</h4>

<figure><code>let rec
    reverse = lambda L. let rec
        rev = lambda inp. lambda op. if null inp then op else rev tail inp head
inp :: op
     in rev L nil,
    L1 = 1 :: 3 :: 5 :: 7 :: 9 :: 11 :: nil,
    L2 = reverse L1
 in output ! L2 -> stop</code></figure>

<hr>

        <p>[2]. Namda Tonpa. <a href="https://github.com/devaspot/milner">Lazy ML interpreter with π-calculus in 26KB</a>. Github Sources.</p>

    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2012</footer>
</body>
</html>
