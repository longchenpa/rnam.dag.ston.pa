<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2019-04-11</title>
    <link rel="stylesheet" href="https://forms.n2o.dev/priv/static/css/forms.css?v=1" />
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2019-04-11</a>
</nav>
<main>
    <section>
        <h3>Нова версія BPE 4.4</h3>

         <p>BPE - це легковажна система управління бізнес-процесів створена для
            вбудовування в ерланг додаток, на якій написана сторінка
            депозитів <a href="https://pb.ua/depozit">pb.ua/depozit</a>. Як, ви знаєте,
            ми давно обіцяли Open Source Банк, як демо додаток на N2O стеку, який
            використовує не тільки NITRO, а й FORMS та BPE – систему документообігу
            та управління бізнес-процесами - святий грааль бізнес девелопменту.
            Завдяки щасливому випадку, я колись писав master thesis на цю тему,
            тому у мене на руках кілька формальних моделей і декілька
            імплементацій (.NET, Erlang). BPE - це топчик, який працює по суті
            на голому gen_server, а в якості зберігання трейсів процесів використовує
            двозв'язкові списки (KVX), які можуть зберігатися у будь-яких базах.
            Тут ми опишемо квітневі модифікації (кодова назва VARNA),
            які були проспонсовані компанією Quanterall. [Якщо все піде добре, то
            можливо ми розширимо присутність N2O стека на Elixir,
            проект <a href="https://github.com/o73">O73</a>]</p>

         <p>— <a href="https://github.com/synrc/bpe">github.com/synrc/bpe</a> — 4.4<br></p>

         <p>Кодова назва цієї версії VARNA, оскільки комміти були зроблені в цьому
            місті в офісі компанії Quanterall; ми плануємо з ними у майбутньому виконати
            порт на Elixir платформу, завдяки чому поширимо присутність BPE та інших продуктів SYNRC
            на Elixir екосистему також.</p>

        <h3>Нововведення</h3>

         <h4>Сумісність з MIX і REBAR3</h4>

         <p>Тут довелося повернутися з {tag,master} тому що rebar3 не розуміє [], на який ми перейшли в MAD.
            Тепер усі бібліотеки працюють і з MAD, і з REBAR3 і з MIX. У наступних версіях з'явиться
            підтримка рідного Elixir додатка топлевела, яке буде імпортувати через Record.extract
            основні схеми SYNRC стека.</p>

        <h4>Квітневий роллаут</h4>

         <p>Разом з BPE оновлено цілу серію додатків, так як BPE використовує
            атоматичний JSON генератор (json-bert.js) через BERT додатки, і вимагає модифіковану версію MAD,
            яка за один прохід генерує файл та компілює його. Також було оновлено бібліотеку FORMS,
            серце генераратора форм.</p>
         <p>
         — <a href="https://forms.n2o.dev">synrc/forms</a> — 4.4<br>
         — <a href="https://nitro.n2o.dev">synrc/nitro</a> — 4.4<br>
         — <a href="https://ws.n2o.dev">synrc/n2o</a> — 6.4<br>
         — <a href="https://mad.n2o.dev">synrc/mad</a> —5.4</p>
         </p>

        <h4>Автогенеровані форми</h4>

        <p>У системах управління бізнес-процесами (СУБП) прийнято використовувати
           максимально декларативну модель опису, тому для кожного кроку
           можна та потрібно перерахувати список документів або повідомлень, які
           тригерят конкретний перехід на конкретному кроці керуючого FSM.
           Для цього в BPE додалося поле <b>prompt</b>, в якому ми зберігатимемо список документів,
           які мають бути правильно заповнені для успішного проходження конкретного кроку.</p>

        <p>Раніше використовувалися автономні контролери, для кожного BPE бізнес-процесу
           писалася супровідна NITRO сторінка, яка ним керувала, в якості веб-контролера.
           Я казав, що це хуйня, тому що треба написати абстрактний формо-генератор
           і запитувати лише ті документи, які прописані в prompt і таким чином можна побудувати систему,
           де не потрібно буде вручну писати веб-контролери процесів. Поле prompt — перший крок
           на шляху до цього процесу, в наступних версіях буде представлений універсальний адміністративний
           редактор управління бізнес-процесом, наприклад, як контрольний елемент <b>#bpe{}</b> бібліотеки NITRO.</p>

        <h4>Адмінка на NITRO</h4>

        <p>У цій версії з'явилася <a href="https://bank-1.n2o.space:8041/app/actors.htm">проста адмінка на NITRO</a>, яка
           дозволяє поки що тільки створювати процеси та проклацувати їхню структуру. Окрема простенька сторінка
           для трейсів процесів, що у банку, наприклад, буде історією транзакцій за рахунком.</p>
        <h4>Візуальні редактори графів</h4>
         <p>BPE - це система управління процесами DEVELOPER FIRST (девелопери самі підтримують декларативні символьні
            та графічні описи). Тому, що ми вважаємо,
            що декларативний формальний синтаксис кращий за графічну нотацію. Графічну нотацію ми не скасовуємо
            та плануємо генерувати візуальне зображення FSM процесу за допомогою автоматичного лейауту.
            Не багато існуючих редакторів таке вміють. Але, припустимо, ми самі навчилися робити аутлейаут зовнішніми
            препроцесорами, тоді друга фіча, яка множино відсутня в існуючих редакторах —
            це можна навішувати теги на сутності, переходи, документи, і не просто теги, а можливо туди
            вписувати правила певної BNF нотації, за якою можна було б згенерувати і код і дані,
            наприклад, ті ж документи, які необхідні для заповнення на поточному кроці. Таким чином існує цілий
            клас параметрів, які у різних місцях мають задаватися у графічному редакторі. Подужати такі
            вимоги можна тільки сівши і написавши все самому. Тому <a href="https://bpmn.io">BPMN.io</a> і ще ряд
            інших графічних редакторів відпали. До того ж якщо й робити, щось варте те як мінімум
            не гірше ніж у Corezoid, а там гарні криві були. Схожі красиві криві зробили наші друзі з Казані
            на сайте <a href="https://bot-crm.ru">bot-crm.ru</a> (на N2O і NITRO до речі!).</p>
          <figure>
         <img src="https://pbs.twimg.com/media/D3ioP6bWwAAznn9?format=jpg" width=600></figure>
         <p>Загалом графічний редактор - це окремий великий незакритий гештальт!
            Сподіваємося, що найближчим часом щось має з'явитися!</p>
        <h4>Нові приклади бізнес-процесів</h4>
        <p>Щоб показати фундаментальну важливість бізнес-процесів, як молотка яким можна все забивати,
           покажемо вам, як можна замість ERP сутності IBAN рахунок, можна ввести поняття безскінченного процесу,
           як банківського рахунку, де кожен аменд чи крок виконання – це транзакція, яка або переказує
           між аккаунтами банку або залучає конектори та шлюзи у фіат та біткоїни.</p>
        <figure><img src="https://bpe.n2o.dev/man/img/diagram-3.svg"></figure>
        <p>Така фундаменталізація бізнес-процесів є гарною вправою для ентерпрайз довбойобів, які
           не знають з чого починати асессмент. Починати потрібно з найголовнішого, того процесу, який
           приносить бабки і де захований весь білінг. Все інше над цим процесом — це його зобов'язання:
           відкриття рахунку, закриття, поповнення, зняття, та трансфер як керуючі аменди.</p>
        <p>У майбутньому повноцінний робочий опенсорс банк чекайте за цією адресою:</p>
        <p>— <a href="https://fin.erp.uno">erpuno/fin</a> — 4.4</p>
       <h4>JSON API</h4>
        <p>Для підтримки звичного представлення бізнес-об'єктів у вигляді JSON на стороні
           клієнта використовується бібліотека BERT:</p>
        <p>— <a href="https://rpc.n2o.dev">synrc/rpc</a></p>
        <p>За допомогою спеціального parse_transform генерується JavaScript SDK для всіх
           рекордів, описаних в type spec. Як же користуватися та перевірити, що все працює?
           Дивіться, як перевірити прямо в браузері. Заходьте на <a href="https://fin.erp.uno/login.htm">bank.n2o.dev</a>
           або <a href="https://fin.erp.uno/login.htm">bpe.n2o.dev</a> та відкривайте JavaScript консоль:</p>
         <figure><code>
 > $io.do = function(r) { console.log(decode(r)); };
         </code></figure>
         <p>тепер можете надіслати ініціалізуючий маркер, для того щоб перемалювати сторінку і викликати NITRO метод event(init).</P>
         <figure><code>
 > ws.send('N2O,');
         </code></figure>
         <figure><code>
 {tup: "io",
  code: "var x = qi('stand'); ... ",
  data: {tup: "Token",
         data: "db3b5bc4fd9a59907f12def5c77fb868d5
                b35cb22c9756f182…7d29875bb699ba05c
                69614e4930da39da127bfb43e698bd10"}}</code></figure>

         <p>Переконайтеся, що ви створили хоча б один процес перед виконанням операції завантаження процесу #load{id=1}:</P>
         <figure><code>
 > ws.send(enc(encode({tup:'load',id:1})));
         </code></figure>
         <figure><code>
 {"tup":"io",
  "data":{"tup":"process",
          "id":1,
          "container":"feed",
          "feed_id":"process",
          "next":2,
          "name":"IBAN Account",
          "tasks":[{"tup":"userTask","name":"Init","module":"bpe_account"},
                   {"tup":"userTask","name":"Upload","module":"bpe_account"},
                   {"tup":"userTask","name":"Signatory","module":"bpe_account"},
                   {"tup":"serviceTask","name":"Payment","module":"bpe_account"},
                   {"tup":"serviceTask","name":"Process","module":"bpe_account"},
                   {"tup":"endEvent","name":"Final","module":"bpe_account"}],
          "events":[{"tup":"messageEvent","name":"PaymentReceived"}],
          "flows":[{"tup":"sequenceFlow","source":"Init","target":"Upload"},
                   {"tup":"sequenceFlow","source":"Upload","target":"Payment"},
                   {"tup":"sequenceFlow","source":"Payment","target":["Signatory","Process"]},
                   {"tup":"sequenceFlow","source":"Process","target":["Process","Final"]},
                   {"tup":"sequenceFlow","source":"Signatory","target":["Process","Final"]}],
           "docs":[{"0":"tx","tup":"$"}],"task":"Process","started":"nonode@nohost"}}
         </code></figure>
         <p>До речі, обгортка N2O протоколу навколо BPE <a href="https://github.com/synrc/bpe/blob/master/src/protos/bpe_n2o.erl#L9-L15">займає 7 рядків</a>.
            Автоматичний маршалінг параметрів дозволяє нам автоматичну публікацію RPC сервісів по шині,
            як у SOAP та старому доброму ентерпрайзі! До мікросервіс-божевілля та GRPC ми теж готові, його ми теж генеруємо
            і навіть присутні на офіційній сторінці <a href="https://github.com/grpc-ecosystem/awesome-grpc">awesome-grpc</a>.
            Користуючись нагодою хочеться передати привіт всім довбойобам, які використовують GRPC у себе у виробництві!
            Нагадую, що GPB либа Томаса Абрамсона на Ерланзі займає 80 000 рядків коду, а наш генератор 140.</p>
        <h3>Плани на майбутнє</h3>
        <p>По-перше, всі нововведення будуть розвиватися в нових версіях, оскільки ці модифікації ще не закінчені.
           З незайманого, але запланованого можна виділити:</p>
       <h4>Amend per History record 4.5</h4>
       <p>Потрібно відскейлити словник бізнес-процесу на випадок для довготривалих процесів, коли трейс
       може зжерти гігабайти пам'яті, тому треба в хісторі писати лише дельти, тобто самі транзакції.
           Це вимагає деякої переробки системи зберігання.</p>
       <h4>KVX back-end 4.6</h4>
        <p>Потрібно перейти з KVS на новішу та мінімалістичну бібліотеку KVX. Можна перейти з gen_server на N2O-шний новий n2o_pi.
           Я згоден перейти на будь-що, що дозволить підвищити формальність і скоротити розмір./p>
    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>

</body>
</html>
