<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content=""/>
    <meta name="author" content="Namdak Tonpa"/>
    <title>2019-06-30</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2019-06-30</a>
</nav>
<main>
    <section>
        <h3>Частина 1. Вступ</h3>

        <p>— <a href="2019-06-30%20DEPOT.htm">Частина 1. Вступ</a><br>
           — <a href="2019-07-01%20ERP%20MOD.htm">Частина 2. Загальна структура</a><br>
           — <a href="2019-07-08%20ERP%20BOOT.htm">Частина 3. Первинні ланцюжки</a><br>
           — <a href="2019-07-08%20KVS%20ADM.htm">Частина 4. Адміністратор даних</a><br>
           — <a href="2019-07-09%20BPE%20ADM.htm">Частина 5. Адміністратор процесів</a><br>
           — <a href="2019-07-17%20ENT%20APP.htm">Частина 6. Структура застосунку</a><br>
           — <a href="2019-07-19%20ENT%20PUB.htm">Частина 7. Публікація в GCP</a></p>

        <h4>Модулі підприємства</h4>

        <p>SYNRC Підприємство є комплекском бібліотек&nbsp;(N2O.DEV) та підсистем
           застосунків&nbsp;(ERP.UNO), яке використовує загальну шину та загальну
           розподілену базу даних.</p>

   <figure><code>
  <a href="https://n2o.dev">N2O.DEV</a> <a href="https://erp.uno">ERP.UNO</a> SITES
  ------- ------- ----------
  active  acc     n2o.dev
  bert    bank    synrc.com
  bpe     chat    erp.uno
  form    crm     lean4.dev
  fs      db
  kvs     ent
  mach    erp
  mad     fin
  n2o     fix
  nitro   ldap
  pie     mq
  rest    pay
  sh      pm
          review
          rocksdb
          sample
          scm
          sys
          tic
          tms
          wms
          xio
        </code></figure>

        <p><b>LDAP</b> — Сервер аутентифікації, зберігання ключів та директорія підприємства.</p>

        <p><b>ERP</b> — Цей модуль зберігає основну ієрархічну структуру
        підприємства, її схему, записи про персонал, інвентар, компанії та офіси
        підприємства.</p>

        <p><b>FIN</b> — Фінансовий модуль підприємства, який зберігає бізнес
        процеси, що являють собою рахунки учасників системи: персонал (для нарахування зарплат),
        рахунки та субрахунки підприємства (для здійснення економічної діяльності) та
        зовнішні рахунки в платіжних системах.</p>

        <p><b>ACC</b> — Система управління персоналом: зарплатні відомості,
        календар підприємства, відпустки, декрети та інші календарі.</p>

        <p><b>SCM</b> — Система управління ланцюжком поставок: головний БП системи -
           експедиційний процес доставки товарів ланцюжку одержувачів
           за допомогою транспортних компаній.</p>

        <p><b>CRM</b> — Система управління клієнтами: є розширенням більш
           абстрактного застосунку CHAT.</p>

        <p><b>PLM</b> — Система управління життєвим циклом проектів та продуктів.
           Містить також CashFlow та P&L звіт.</p>

        <p><b>PM</b> — Система управління проектами підприємства із деталізацією
           часу та протоколів приймання-передачі (прийняті комміти у гітхабі).</p>

        <p><b>WMS</b> — Система керування складом.</p>

        <p><b>TMS</b> — Система керування транспортом підприємства.</p>

        <h4>Модуль PLM</h4>

        <p>У цьому документі описано систему управління життєвим
           циклом продуктів та проектів - Product Lifecycle Management (PLM).
           На базі PLM модуля ми розробили систему керування
           аутсорсинговим підприємством Quanterall із можливістю
           інвестування і врахуванням опціонів для програмістів.

        <p>Цілі проекту:</p>

        <p>— Підвищення прозорості ведення бізнесу;<br>
           — Видача опціонів із прибутку;<br>
           — Автоматизація підприємства.</P>

        <p>Задачі проекту:</P>

        <p>— Створення панелі управління директора, працівників та інвесторів;<br>
           — Попроектна звітність (СashFlow, P&L);<br>
           — Управління опціонами програмістів;<br>
           — Інвестування в проекти іншими інвесторами (зі страхуванням).</p>

        <p>Бізнес процеси:</p>

        <p>— Бізнес-процес рахунок учасника проекту (FIN);<br>
           — Головний бізнес-процес модуля - довгоживучий проект-продукт (PLM);<br>
           — Створення проекту із залученням інвестицій під заставу прибутку від інших проектів (Pre-PLM);<br>
           — Щомісячний процес розподілу прибутку (PLM-Calc):
             після віднімання згортки виплачених зарплат із згортки оплачених рахунків клієнтам
             по CashFlow ми формуємо список статей:
             1) страховий фонд (який відкушується якщо ми використовуємо цей проект
                як заставу для кредиту на інший проект);
             2) опціони програмістів
                видаються автоматично людям, які працюють на цьому проекті,
                таким же чином будь-які інші можуть також брати участь;
             3) наш заробіток (вільний пул чи резервація);
             4) R&D відрахування (обов'язкові).</p>

        <h4>Керівництво розробника PLM</h4>

        <p>Посібник розробника PLM включає покроковий опис процесу створення
           підсистеми PLM та використання бібліотек SYNRC:
           1) Адміністративна частина KVS, BPE, FORM;
           2) Модулі конфігураціїи PLM: PLM, FIN, LDAP.</p>

        <p>Система PLM залежить також від інших моделей підприємства:
           FIN — фінансовий модуль управління персональними рахунками та рахунками підприємства;
           ACC — модуль управління персоналом та контрагентамии;
           ERP — модуль інкапсуляції організаційної структури підприємства;
           LDAP — система управління ідентифікаторами та ключами.
           Окрім модулів підприємства тут також розглядаються бібліотеки,
           залежності модуля PLM:
           BPE — система управління бізнес процесами підприємства;
           KVS — система зберігання данних;
           FORM — система генерації форм. PLM залежить і від інших бібліотек, але вони
           у цьому документі не розглядаються:
           N2O — система управління з'єднаннями та протоколами;
           NITRO — система генерація HTML5.</p>


    </section>
    <section>
        <h3>Управління ресурсами</h3>

        <p></p>

        <p>Головним чином інформаційна структура нашого підприємства
           складається з обчислювальних ресурсів (додатки запущені в шині)
           та накопичених ресурсів (дані збережені у базі даних).

        <p>SOA архітектура як модель управління обчислювальними
           ресурсами пропонує асинхронний протокол віддаленого виклику на шинах.
           З N2O можна використати MQTT та інші шини за допомогою наступних протоколів: TCP, WebSocket.
           Ще ці асинхронні протоколи часто називаються
           протоколами реального часу, оскільки функції надсилання повідомлень завжди
           миттєво повертають результат. Щодо протоколів для публікації та доступу
           до даних тут може виявитися доречним використання синхронного HTTP протоколу.</p>

        <h4>Обчислювальні ресурси</h4>

        <p>Для SOA архітектури традиційно використовуються асинхронні
           протоколи доступу до обчислювальних ресурсів. Зазвичай це серверні
           воркери підключені до шини та обслуговуюче API певного застосунку.
           Кожна програма має своє консистентне хеш-кільце воркерів. В мережі
           працює одночасно безліч кілець-застосунків.</p>

   <figure><code>
config :n2o,
  tcp_services: ['ldap'],
  ws_services: ['chat'],
  mqtt_services: ['erp', 'bpe']
   </code></figure>

        <p>За допомогою <b>config.exs</b> файлу можна налаштувати необхідну
           конфігурацію серії консистентних кілець, кожне з яких працює
           на своєму транспортному протоколі. У цьому прикладі показана
           карта Erlang серверів, які обслуговують черги застосунків у шині:</p>

   <figure><code>
> PLM.vnodes
[
  {{:tcp, '/ldap/tcp/4'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/3'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/2'}, [:n2o_tcp]},
  {{:tcp, '/ldap/tcp/1'}, [:n2o_tcp]},
  {{:ws, '/chat/ws/4'}, [:n2o_ws]},
  {{:ws, '/chat/ws/3'}, [:n2o_ws]},
  {{:ws, '/chat/ws/2'}, [:n2o_ws]},
  {{:ws, '/chat/ws/1'}, [:n2o_ws]},
  {{:mqtt, '/erp/mqtt/4'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/3'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/2'}, [:n2o_mqtt]},
  {{:mqtt, '/erp/mqtt/1'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/4'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/3'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/2'}, [:n2o_mqtt]},
  {{:mqtt, '/bpe/mqtt/1'}, [:n2o_mqtt]},
  {{:caching, 'timer'}, [:n2o]}
]
    </code></figure>

        <p>Завдяки такій деталізації можна проектувати гетерогенні системи
           включаючи необхідний набір протоколів на портах необхідних для цього машин. Ця ж система
           дозволяє досягти балансування у навантаженні, включаючи фізичні ресурси
           до певних черг шини даних.</p>

        <p>У нашій моделі асинхронні протоколи використовуються для керування
           обчислювальними ресурсами підприємства.</p>

        <h4>Накопичувальні ресурси</h4>

        <p>Розподілені хеш-кільця використовуються не тільки для розподілу обчислень,
           але й для зберігання даних.
           Деякі бази даних, наприклад RocksDB та Cassandra використовують глобальний простір
           ключів для даних на відміну від таблично-орієнтованих баз. Саме для таких
           баз і створена бібліотека KVS, в якому як синхронний транзакційний
           інтерфейсу являється API ланцюжків з гарантією консистентності. У цьому прикладі
           показаний приклад структури ланцюжків екземпляра системи PLM:</p>

   <figure><code>
> :kvs.all :writer
[
  {:writer, '/bpe/proc', 2},
  {:writer, '/erp/group', 1},
  {:writer, '/erp/partners', 7},
  {:writer, '/acc/synrc/Kyiv', 3},
  {:writer, '/chat/5HT', 1},
  {:writer, '/bpe/hist/1562187187807717000', 8},
  {:writer, '/bpe/hist/1562192587632329000', 1}
]
    </code></figure>

        <p>У нашій моделі синхронні протоколи використовуються для керування
           накопичувальними ресурсами підприємства та транзакційного процесингу.</p>

        <h4>Типові специфікації</h4>

        <p>Протоколи визначаються типовими специфікаціями та генеруються для наступних мов:
           Java, Swift, JavaScript, Google Protobuf V3, ASN.1. Також ми генеруємо валідатори даних, за цими
           типовими анотаціями та вбудовуємо ці валідатори в тракт наших розподілених протоколів,
           тому ми ніколи не дозволяємо клієнтам зіпсувати сторадж. Для веб-застосунків у нас розвинена
           система валідації як JavaScript, так і на стороні сервера. Бізнес логіка повністю ізольована в нашій
           системі управління бізнес процесами, де кожен бізнес процес
           є процесом віртуальної машини. Усі ланцюжки модифікуються атомарним чином,
           підтримують flake адресацію та не вимагають додаткової ізоляції
           у своєму примітивному використанні.
           Тому ви також можете трактувати базу як розподілений кеш,
           і використовувати її з фронту застосунків для примітивних випадків.</p>


    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
</body>
</html>
