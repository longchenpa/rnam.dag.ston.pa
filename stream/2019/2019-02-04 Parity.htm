<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2019-02-04</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
    <link rel="stylesheet" href="../../black.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2019-02-04</a>
</nav>
<main>
    <section>
        <h3>Parity</h3>

        <p> Я давно хотел завести рубрику не-фуфел блокчейнов.
            Так, чтоб чиста пацанчики-долбоебы которые работают консультантами Остапами Бендерами
            немного набирались ума, хотя бы из моего блога. Пушо ко мне регулярно
            какие-то очень стремные чуваки обращаються похвастаться как они охуенно
            скупились и продались, каждые три слова говорят "стакан", какие они сука
            визионеры, а сами не знают кто такой Хочкинсон или Вуд. Да я думаю,
            что они к Бутерину хуй бы подошли, тот бы их точно нахуй сразу послал.</p>

        <p> Кароче, чтобы не ебать вам мозг, я буду вести рубрику блокчейнов,
            с которыми вы можете приходить к Сохацкому. Рабочих только два: Биткоин и Эфир.
            Все бывшие учасники Эфира тоже вполне кошерные: Ada/Cardano (Чарльз Хочкинсон,
            пеймент системы), Parity (Гэвин Вуд, блокчейн блокчейнов). Про IOHK информации столько,
            что все лямбда-пацанчики знают эту хуйню от и до, поэтому поговорим сегодня,
            про бывшего СТО Эфира, Гэвина Вуда и серию его блокчейнов <a href="https://parity.io">parity.io</a>.

        <p> Чтобы определить кошерный ли блокчейн, надо посмотреть на каком языке он написан:
            "Да" — это Haskell, Rust, Swift;
            "Нет" — это C/C++, Scala, Clojure, Java, Go;
            "Возможно" — это OCaml, Erlang.
            Вот и вся формула. Это я вам как визионер на 20 лет базарю.
            Вообщем-то такая же формула применима ко всему, не только к блокчейнам.</p>

        <h3>Блокчейн Блокчейнов</h3>

        <p> Если кратко то суть проекта следующая. Рано или поздно блокчейнов будет много,
            поэтому уже сейчас надо думать о бриджах между ними, а значит о блокчейне для блокчейнов.
            Вот и всё. У системы был эволюционный стрим, и в определнный момент произошла
            форк-экспансия на два направления (как N2O в своеме время распространился
            и на MQTT стек): 1) Полькадот "В горошек" (Универсальный Блокйчен),
            2) Субстрат (Блокчейн Блокчейнов). Первого существует одновременно
            сразу два варианта, две тестовые сети: 0.2 и 0.3 и скоро запустится 0.4.
            Второй — это по сути старая версия 0.1, сфокусированая на протоклах
            сопряжения с разными блокчейнами.
            </p>

        <h3>Свой Эфир</h3>

        <p> Так же как Хочкинсон держит свой вариант эфира Ethereum Classic (Scala, Go),
            так же и Вуд держит свою версию Эфира — Кован (Rust), демонстрируя
            корреляцию "каждый кофаундер эфира держит свою его модификацию".</P>

        <h3>Клиенты</h3>

        <p> Клиент для Кована приятненький, сделаный классно, чего не скажешь
            про дефаултные клиенты для Полькидота (есть две версии: paritytech/substrate-light-ui,
            paritytech/substrate-ui; и обе говно). А вот блокчейн эксплорер очень приятненький,
            настолько, что его вынесли даже в другую организацию — polkadot-js/apps.</p>

        <h3>Ноды</h3>

        <p> Parity Technologies по сути ведет разработку трёх
            блокчейнов: Substrate, Polkadot, Parity (Kovan). По две слинкованые ноды
            первого и второго я поставил в течении часа на все свои компьютеры и не захотел никого убить,
            что говорит о том, что технология действительно приятная. Как сказали в твиттере,
            вопросов дополнительных не вызывает, как другие Rust-блокчейны.</p>

        <p> Пока читаю код второй день, но мне кажется что слишком подроблено, так нихуя сразу не понятно,
            крейтов слишком дохуя чтобы увидеть всю картину за один день.
            С другой стороны пацаны не запороли кроссплатформенную концепцию Rust
            и все продукты шикарно работают
               на Windows (SYNRC-TRISTELLAR),
               Linux (Windows for Linux, SYNRC-ALEX, SYNRC-MAX),
               Mac (SYNRC-AIR) и кикаются с мастер веток.</p>

        <h3>Контракты</h3>

        <p> Контракты предполагается писать сразу на расте с линейными типами,
            так что определённую степень верификации они предоставляют, уже сразу больше
            чем Haskell или OCaml. Ха-ха. Видел в репах пример ERC-20 контракта на Rust.
            Минимальный контракт выглядит так:</p>
        <figure><code>
  #![no_std]   extern crate pwasm_ethereum;
  #[no_mangle] pub fn deploy() { }
  #[no_mangle] pub fn call() { pwasm_ethereum::ret(&b"result"[..]); }
        </code></figure>

        <h3>Эпилог</h3>

        <p>И помните! Блокчейн — говно, все кто занимаются им — аферисты!
           Не несите им деньги, мы делаем всё бесплатно! Просто найдите не-мычащего
           ебаната и засылайте к нам.</p>

        <figure><img src="https://tonpa.guru/stream/2020/img/Blockchain.jpg"></figure>

    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
</body>
</html>
