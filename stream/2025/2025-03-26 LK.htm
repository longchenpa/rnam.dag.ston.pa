<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2025-03-26 LK</title>
    <link rel="stylesheet" href="../../blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2025-03-26</a>
</nav>
<main>
    <section>

<h3>LK</h3>

<p align=right>Автор: Максим Сохацький</p>

    <br>
    <hr>

<h4>Вступ до Маленького Ядра</h4>

<p>Little Kernel (LK) — це вбудоване ядро з відкритим вихідним кодом,
яке використовується в різних операційних системах і продуктах,
переважно в тих, що пов’язані з низькорівневими вбудованими рішеннями,
авантажувачами та безпечними середовищами. Ось список операційних
систем і продуктів, які використовують LK, заснований на доступній
інформації та логічних висновках із контексту проєкту <a href="https://github.com/littlekernel/lk">LK</a>:

<p>Тревіс Гейзельбрехт є ключовою фігурою у створенні Little Kernel (LK)
— легкого вбудованого ядра з відкритим вихідним кодом, яке стало
основою для багатьох проєктів, зокрема Zircon у Fuchsia OS від Google.
Він розробив LK з нуля, спираючись на свій багатий досвід роботи над
операційними системами, такими як BeOS, NewOS і низькорівневими
компонентами для Danger Hiptop, Apple (iPhone) та інших платформ.
Гейзельбрехт створив LK як модульне, портативне ядро для вбудованих
систем, зосередившись на ефективності (розмір ядра лише 15-20 КБ на
ARM), підтримці багатопоточності, управлінні пам’яттю та гнучкості
для різних архітектур, таких як ARM, RISC-V і x86. Його підхід до
дизайну ядра відображає прагнення до простоти та продуктивності,
що зробило LK популярним вибором для завантажувачів і TEE у пристроях
на базі Android та інших системах.</p>

<h3>ОС</h3>

<p>Перелік операційних систем, що використовують або базуються на LK:</p>

<h4>Zircon (Fuchsia OS)</h4>

<p>Zircon — це мікроядро, яке лежить в основі операційної системи
Fuchsia від Google. Воно базується на LK і було значно розширене
для потреб Fuchsia. LK слугує основою для реалізації базових функцій,
таких як управління потоками, пам’яттю та апаратними абстракціями.
Використання: Zircon використовується в Fuchsia, яка розроблена як
альтернатива Android для пристроїв IoT, смартфонів і комп’ютерів.</p>

<h4>Trusted Little Kernel (TLK)</h4>

<p>TLK — це відкрита реалізація технології NVIDIA для створення надійного
виконання (Trusted Execution Environment, TEE) на базі LK. Вона
призначена для роботи з процесорами NVIDIA Tegra.
Використання: TLK інтегрується з Trusted Firmware-A (TF-A) для
забезпечення безпечного виконання на SoC NVIDIA Tegra,
наприклад, у пристроях із підтримкою DRM (Digital Rights Management).</p>

<h4>Android Bootloaders</h4>

<p>LK широко використовується як основа для завантажувачів (bootloaders)
у багатьох пристроях на базі Android. Завантажувач на базі LK запускає
ядро Linux і забезпечує базові функції, такі як розблокування пристрою
та вибір режимів завантаження. Використання: Приклади включають пристрої
від Qualcomm (наприклад, Lumia з MSM8227), Fairphone (раніші моделі),
і численні Android-пристрої з чипами від різних виробників.</p>

<h4>Trusted Execution Environment (TEE) у Android</h4>

<p>У сучасних Android-пристроях LK часто використовується для
створення TEE поряд із ядром Linux. TEE забезпечує ізольоване
середовище для таких функцій, як DRM, безпечні платежі та
криптографічні операції. Використання: Реалізовано в пристроях
із чипами Qualcomm, MediaTek тощо, де LK адаптовано під конкретні SoC.</p>

<h3>Платформи</h3>

<h4>Qualcomm-based Devices</h4>
<p>LK використовується в завантажувачах для пристроїв із процесорами Qualcomm Snapdragon. Наприклад, проєкт Android4Lumia адаптував LK для Lumia на базі MSM8227.
Приклад: Nokia Lumia (деякі моделі).</p>

<h4>NXP i.MX8</h4>
<p>NXP має форк LK (littlekernel-imx8), який адаптовано для процесорів i.MX8. Це ядро використовується в низькорівневих задачах для вбудованих систем.
Використання: Промислові системи, автомобільні рішення.</p>

<h4>Raspberry Pi Pico</h4>
<p>LK підтримує проєкти для Raspberry Pi Pico (на базі RP2040). Хоча це не операційна система, LK може бути зібрано для запуску простих тестових програм або як основа для RTOS на цій платформі.
Використання: Освітні проєкти, DIY-розробка.</p>

<h4>Fairphone</h4>
<p>Ранні моделі Fairphone використовували LK як завантажувач. Джерельний код для LK доступний у FairphoneMirrors на GitHub.
Використання: Завантажувач для Android у Fairphone 1, 2 тощо.</p>

<h4>Експериментальні RTOS</h4>
<p>LK часто застосовується як основа для створення кастомних операційних систем реального часу (RTOS) у вбудованих проєктах завдяки його легкості (15-20 КБ на ARM) та модульності.
QEMU Емуляція: LK підтримує тестування в QEMU для різних архітектур (ARM, RISC-V, ARM64), що робить його популярним для розробки та навчання.</p>

<h3>Висновки</h3>

<p>LK не є повноцінною операційною системою для кінцевих
користувачів, а скоріше ядром або завантажувачем, яке
адаптується під конкретні потреби. Тому його використання
часто приховане в низькорівневих компонентах продуктів.</p>

    </section>
</main>
<footer><a href="https://instagram.com/5HT/">Namdak Tönpa</a> <span class="heart">&nbsp;❤&nbsp;</span> <a href="https://n2o.dev/">N2O.DEV</a></footer>
</body>
</html>


