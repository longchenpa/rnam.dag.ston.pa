<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2020-04-23</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2020-04-23</a>
</nav>
<main>
    <section>
        <h3>Лестница в HoTT: лямбда история</h3>
        <p align=right>
FROM: Максим Сохацкий<br/>
TO: Формальная Философия
</p>

   <p>Здесь будет представлена глубокая и обширная история логики и формальной математики,
      которую я когда-то увидел на слайдах Даны Скотта в 2012 году.
      Лестниц в HoTT есть много. Как говорят в буддизме
      "для существ с высокими способностями", достатоточно учебника HoTT,
      чтобы понять всё сразу. Для существ со средними способностями
      достаточно покрутить лямбда куб и пойти по Барендрехту. Для существ
      с низкими способностями, как я, предлагаю ознакомиться с путем Дана Скотта,
      т.е. наиболее детальным и длинным, который пришлось пройти и мне.</p>

   <p>Сам же я сторонник краткого учебника, который можно усилить даже
      интерпретатором, тайпчекером и своей вариацией HoTT, которую
      представляют собой практически все HoTT курсы, включая курс Роберта Харпера 15-819.</p>

   <p>Если спросить о моем таком курсе, для существ с высшими способностями,
      то он пока не сформирован в учебник, но несколько глав для ознакомления
      <a href="https://groupoid.space/misc/course/">можно посмотреть тут</a>,
      а мой список литературы, являющийся частью этого (расширеного) списка Даны Скотта,
      для существ со средними способностями состоящий из 60 работ <a href="https://github.com/groupoid/groupoid.space/tree/master/misc/references">можно найти тут</a>.
      Понятное дело, что это все для программистов!</p>

    <h3>1870-е</h3>
    <p><b>Begriffsschrift</b>: Frege (1879)</p>

    <h3>1880-е</h3>
    <p>What are numbers?: Dedekind (1888)<br/>
       Number-theoretic axioms: Peano (1889)</p>

    <h3>1890-е</h3>
    <p>Vorlesungen über die Algebra der Logik: Schröder (1890–1905)<br/>
        Grundgesetze der Arithmetik: Frege (1893-1903)<br/>
        Formulario Mathematico: Peano (1895-1901)<br/>
        Grundlagen der Geometrie: Hilbert (1899)</p>

    <h3>1900-е</h3>
    <p>Diophantine problem: Hilbert (1900)<br/>
       Russell's Paradox: Russell (1901)<br/>
       Principles of Mathematics: Russell (1903)<br/>
       Richard’s Paradox: Richard (1905)<br/>
       Theory of Types: Russell (1908)</p>

    <h3>1910-е</h3>
    <p>Principia Mathematica: Whitehead-Russell (1910-12-13)<br/>
       Calculus of relatives: Löwenheim (1915)</p>

    <h3>1920-е</h3>
    <p>Löwenheim-Skolem Theorem: Skolem (1920)<br/>
       Propositional calculus completeness: Post (1921)<br/>
       Monadic predicate calculus decidable: Behmann (1922)<br/>
       Abstract proof rules: Hertz (1922)<br/>
       Primitive recursive arithmetic: Skolem (1923)<br/>
       Combinators: Schönfinkel (1924)<br/>
       Function-based set theory: Vvon Neumann (1925)<br/>
       “Conceptual” undecidability: Finsler (1926)<br/>
       Epsilon operator: Hilbert-Bernays (1927)<br/>
       Combinators (again): Curry (1927)<br/>
       Ackermann function: Ackermann (1928)<br/>
       Entscheidungsproblem: Hilbert-Ackermann (1928)<br/>
       Abriss der Logistik & simple type theory: Carnap (1929)</p>

    <h3>1930-е</h3>
    <p>Combinatory logic: Curry (1930-32)<br/>
       Herbrand’s Theorem: Herbrand (1930)<br/>
       Completeness proof: Gödel (1930)<br/>
       Partial consistency proof: Herbrand (1931)<br/>
       Incompleteness: Gödel (1931)<br/>
       Untyped λ-calculus: Church (1932-33-41)<br/>
       Studies of primitive recursion: Péter (1932-36)<br/>
       Non-standard models: Skolem (1933)<br/>
       Functionality in Combinatory Logic: Curry (1934)<br/>
       Grundlagen der Mathematik: Hilbert-Bernays (1934-39)<br/>
       Natural deduction: Gentzen (1934)<br/>
       Number-theoretic consistency & 0-induction: Gentzen (1934)<br/>
       Inconsistency of Church’s System: Kleene-Rosser (1936)<br/>
       Confluence theorem: Church-Rosser (1936)<br/>
       Finite combinatory processes: Post (1936)<br/>
       Turing machines: Turing (1936-37)<br/>
       Recursive undecidability: Church-Turing (1936)<br/>
       General recursive functions: Kleene (1936)<br/>
       Further completeness proofs: Maltsev (1936)<br/>
       Improving incompleteness theorems: Rosser (1936)<br/>
       Fixed-point combinator: Turing (1937)<br/>
       Computability and λ-definability: Turing (1937)</p>

    <h3>1940-е</h3>
    <p><b>Simple type theory & λ-calculus</b>: Church (1940)<br/>
       Primitive recursive functionals: Gödel (1941-58)<br/>
       Recursive hierarchies: Kleene (1943)<br/>
       <b>Theory of categories</b>: Eilenberg-Mac Lane (1945)<br/>
       New completeness proofs: Henkin (1949-50)</p>

    <h3>1950-е</h3>
    <p>Computing and Intelligence: Turing (1950)<br/>
       Rethinking combinators: Rosenbloom (1950)<br/>
       <b>Introduction to Metamathematics</b>: Kleene (1952)<br/>
       Arithmetical predicates: Kleene (1955)<br/>
       <b>Combinatory Logic. Volume I.</b>: Curry-Feys-Craig (1958)<br/>
       <b>Adjoint functors</b>: Kan (1958)<br/>
       Recursive functionals & quantifiers, I.&II.: Kleene (1959-63)<br/>
       Countable functionals: Kleene-Kreisel (1959)</p>

    <h3>1960-е</h3>
    <p>Elementary formal systems: Smullyan (1961)<br/>
       <b>Grothendieck Topologies</b>: M.Artin (1962)<br/>
       Higher-type λ-definability: Kleene (1962)<br/>
       <b>Grothendieck topoi</b>: Grothendieck et al. SGA 4 (1963-64-72)<br/>
       <b>Functorial semantics</b>: Lawvere (1963)<br/>
       Adjoint functors & triples: Eilenberg-Moore (1965)<br/>
       Cartesian closed categories: Eilenberg-Kelly (1966)<br/>
       New foundations of recursion theory: Platek (1966)<br/>
       Normalization Theorem: Tait (1967)<br/>
       <b>AUTOMATH  & dependent types</b>: de Bruijn (1967)<br/>
       Finite-type computable functionals: Gandy (1967)<br/>
       Normal-form discrimination: Böhm (1968)<br/>
       <b>Category of sets</b>: Lawvere (1969)<br/>
       Typed domain logic: Scott (1969-93)<br/>
       Domain-theoretic λ-models: Scott (1969)<br/>
       <b>Formulae-as-types</b>: Howard (1969 -1980)<br/>
       <b>Adjointness in foundations</b>: Lawvere (1969)</p>

    <h3>1970-е</h3>
    <p>Categorical logic: Joyal (1970+)<br/>
       <b>Elementary topoi</b>: Lawvere-Tierney (1970)<br/>
       Denotational semantics: Scott-Strachey (1970)<br/>
       <b>Coherence in closed categories</b>: Kelly (1971)<br/>
       <b>Quantifiers and sheaves</b>: Lawvere (1971)<br/>
       <b>Martin-Löf type theory</b>: Martin-Löf (1971)<br/>
       <b>System F, Fω</b>: Girard (1971)<br/>
       <b>Logic for Computable Functions</b>: Milner (1972)<br/>
       <b>From sheaves to logic</b>: Reyes (1974)<br/>
       <b>Polymorphic λ-calculus</b>: Reynolds (1974)<br/>
       <b>Call-by-name, call-by-value</b>: Plotkin (1975)<br/>
       <b>Modeling Processes</b>: Milner (1975)<br/>
       SASL: Turner (1975)<br/>
       Scheme: Sussman-Steele (1975-80)<br/>
       Functional programming & FP: Backus (1977)<br/>
       First-order categorical logic: Makkai-Reyes (1977)<br/>
       Edinburgh LCF: Milner et al. (1978)<br/>
       Let-polymorphic type inference: Milner (1978)<br/>
       Intersection types: Coppo-Dezani (1978)<br/>
       <b>ML</b>: Milner et al. (1979)<br/>
       *-Autonomous categories: Barr (1979)<br/>
       <b>Sheaves and logic</b>: Fourman-Scott (1979)</p>

    <h3>1980-е</h3>
    <p>Frege structures: Aczel (1980)<br/>
       <b>HOPE</b>: Burstall et al. (1980)<br/>
       <b>The Lambda Calculus Book</b>: Barendregt (1981-84)<br/>
       Structural Operational Semantics: Plotkin (1981)<br/>
       Effective Topos: Hyland (1982)<br/>
       Dependent types & modularity: Burstall-Lampson (1984)<br/>
       <b>Locally CCC & type theory</b>: R.A.G. Seely (1984)<br/>
       <b>Calculus of Constructions</b>: Coquand-Huet (1985)<br/>
       Bounded quantification: Cardelli-Wegner (1985)<br/>
       <b>NUPRL</b>: Constable et al. (1986)<br/>
       <b>Higher-order categorical logic</b>: Lambek-P.J.Scott (1986)<br/>
       Cambridge LCF: Paulson (1987)<br/>
       <b>Linear logic</b>: Girard et al. (1987-89)<br/>
       HOL: Gordon (1988)<br/>
       FORSYTHE: Reynolds (1988)<br/>
       Proofs and Types: Girard et al. (1989)<br/>
       Integrating logical & categorical types: Gray (1989)<br/>
       Computational λ-calculus & monads: Moggi (1989)<br/>

    <h3>1990-е</h3>
    <p>Haskell: Hudak-Hughes-Peyton Jones-Wadler (1990)<br/>
       Higher-type recursion theory: Sacks (1990)<br/>
       <b>Standard ML</b>: Milner, et al. (1990-97)<br/>
       Lazy λ-calculus: Abramsky (1990)<br/>
       Higher-order subtyping: Cardelli-Longo (1991)<br/>
       Categories, Types and Structure: Asperti-Longo (1991)<br/>
       STANDARD ML of NJ: MacQueen-Appel (1991-98)<br/>
       QUEST: Cardelli (1991)<br/>
       Edinburgh LF: Harper, et al. (1992)<br/>
       <b>Pi-Calculus</b>: Milner-Parrow-Walker (1992)<br/>
       Categorical combinators</b>: Curien (1993)<br/>
       Translucent types & modular</b>: Harper-Lillibridge (1994)<br/>
       Full abstraction for PCF</b>: Hyland-Ong/Abramsky, et al. (1995)<br/>
       Algebraic set theory</b>: Joyal-Moerdijk (1995)<br/>
       Object Calculus</b>:  Abadi-Cardelli (1996)<br/>
       Typed intermediate languages</b>: Tarditi, Morrisett, et al. (1996)<br/>
       Proof-carrying code</b>: Necula-Lee (1996)<br/>
       Computability and totality in domains</b>: Berger (1997)<br/>
       Typed assembly language</b>: Morrisett, et al. (1998)<br/>
       Type theory via exact categories</b>: Birkedal, et al. (1998)<br/>
       Categorification</b>: Baez (1998)</p>

    <h3>2000-е</h3>
    <p>Predicative topos: Moerdijk-Palmgren (2000)<br/>
       Sketches of an Elephant: Johnstone (2002+)<br/>
       <b>Differential λ-calculus</b>: Ehrhard/Regnier (2003)<br/>
       Modular Structural Operational Semantics: Mosses (2004)<br/>
       <b>A λ-calculus for real analysis</b>: Taylor (2005+)<br/>
       <b>Homotopy type theory</b>: Awodey-Warren (2006)<br/>
       <b>Univalence axiom</b>: Voevodsky (2006+)<br/>
       The safe λ-calculus: Ong, et al. (2007)<br/>
       <b>Higher topos theory</b>: Lurie (2009)<br/>
       </p>

    <h3>2010-е</h3>
    <p><b>Functional Reactive Programming</b>: Hudak, et al. (2010)<br/>
       <b>HoTT Book</b>: Voevodsky, et al. (2012-13)</p>

    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2021</footer>
</body>
</html>
