<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2023-08-08 ASN.1</title>
    <link rel="stylesheet" href="../../blank.css" />
    <link rel="stylesheet" href="../../journal.css?v=1" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2023-08-08</a>
</nav>
<main>
    <section>

    <h3>ASN.1 Компілятор</h3>


    <h3>Зміст</h3>

    <p>1) Контест ASN.1 компіляторів<br>
       2) ASN.1 vs GPROTO<br>
       3) X.509 DER vs Erlang BERT/ETF<br>
       4) Бібліотека Apple<br>
       5) Erlang AST ASN.1 Swift кодогенаратора<br>
    </p>

    <h3>Вступ</h3>

    <p>Питання вибору серіалізатора залежить від
       типу інфраструктури в компанії. Якшо ми говоримо
       про гомогенні інтерфейси та бібліотеки
       прикладного програмування то зазвичай вони
       достатньо розвинені аби автоматично генерувати
       структури для основних мов програмування
       для яких анонсується серіалізатор. Хоча
       формально йдеться про AST трансформацію
       з мови визначення типів структур в цільову
       мову програмування, такі системи називаються
       компіляторами мови визначення даних.</p>

    <p>У світі існує багато рантаймів, і кожен з них
       пропонує свій рідний серіалізатор, який
       в незмінному вигляді представляє дані які
       циркулюють в рантаймі або віртуальній машині.
       Так на мовах .NET, Java, Haskell, Erlang
       є такі природні серіалазотори. В гомогенних
       архітектурах, де все побудовано навколо однії
       мови програмування, прийнято використовувати
       цей серіалізатор як основний для всіх сервісів
       написаних навіть на різних мовах програмування,
       так як BERT-RPC протокол який використовувався
       в Github.</p>

    <p>Окремо виділяються формати які не прив'язані
       до однієї мови, а пропонуються як універсальні
       серіалізатори, такі як IDL COM/DCOM, ASN.1 DER,
       Erlang BERT/ETF, GRPC Gproto, SOAP XML/WBXML,
       та інші бінарні мови і серіалізатори.</p>

    <p>Всі сертифікати в браузері, SSH ключі, PGP/GPG ключі,
       закриті і відкриті конверти, криптографічні повідомлення CMS,
       протоколи видачі сертифікатів, LDAP директорія
       та ще багато іншого включачи GSM/LTE та майже всі
       телекомунікаційні повідомлення визначаються за допомогою ASN.1.</p>

    <h3>Компілятори</h3>

    <h3>Серіалізатори</h3>

    <h3>Стандартні і фірмові</h3>

    <h3>Бібліотеки Apple</h3>

    <h3>Кодогенерація на Erlang в Swift</h3>

    <h3>Висновки</h3>

   <br><center>&dot;</center>

    <hr>

   <br><center>&dot;</center>

     <p>
     [1]. <a href="https://www.itu.int/en/ITU-T/asn1/Pages/Tools.aspx">ITU-T ASN.1 Compilers</a><br>
     [2]. <a href="https://swiftpackageindex.com/apple/swift-asn1/main/documentation/swiftasn1/decodingasn1">Apple Swift ASN.1 Library Documentation.</a><br>
     [3]. <a href="https://letsencrypt.org/uk/docs/a-warm-welcome-to-asn1-and-der/">Let's Encrypt. Ласкаво просимо в ASN.1 і DER</a><br>
     [4]. <a href="https://apple.github.io/swift-crypto/docs/current/Crypto/index.html">Swift Crypto Library Documentation</a><br>
     [5]. <a href="https://swiftpackageindex.com/apple/swift-certificates/0.6.0/documentation/x509">Swift Certificates Library Documentation</a><br>
     </p>

    </section>
</main>
<footer><a href="https://instagram.com/5HT/">Namdak Tönpa</a> <span class="heart">&nbsp;❤&nbsp;</span> 2023</footer>
</body>
</html>

