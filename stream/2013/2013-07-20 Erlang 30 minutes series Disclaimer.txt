Erlang 30 minutes series Disclaimer

Если бы мне давали 10 центов за каждый раз когда ко мне подходят и говорят, что
мой LDAP сервер написанный игрушечный и бессмысленный я был бы миллионером. Не
прошел мимом и случай с 30-минутным компилятором JavaScript. Странно, но мне
кажеться, должно быть очевидно, что моя серия постов напишете хуйню на эрланг
за 30 минут ставит своей целью популяризацию Эрланга, носит педагогический
характер выделения сути, является мастер классами по протототипированию.

Как написать LDAP сервер на эрланг за 30 минут
Как написать Continuous Integration на эрланг за 30 минут
Как написать REST сервис за 30 секунд
Как написать Erlang JavaScript Compiler на эрланг за 30 минут

Мотив этих всех статей не смотря на стиль моего изложени не выебнуться перед
вам (как вам кажется) и не вогнать вас в краску, якобы на Clojure, Scala или
Haskell такое не напишешь, дорогие коллеги. Мотив этих статей -- помочь
человеку, который впервые видит Эрланг, снять блокировки, что бы он быстро и
легко смог посмотреть как выглядят реальные задачи на функциональном языке,
которые помещаются у него в голове с первого взгляда. Что бы он набрался
смелости его использовать и облегчил себе жизнь, переходя с Java, PHP, Ruby,
Python и т.д. Никто вас не упрекает в том что гавно-Эрланг круче ваших
милнеровских типосистем. Они круче, можете мне не доказывать, я не такой идиот
как вы думаете.

Поэтому говорить мне что в LDAP сервере не парсается Query Language, а в Erlang
JavaScript компиляторе не поддерживается вызовы всех JavaScript библиотек в
мире (в коде написаном за 30 минут) -- это просто смешно. Такое ощущение что у
людей какая-то зависть появляется и теряется ум :) и понятное дело если
джавашники такое городят, но когда лисперы в каменты заходят это уже
становиться смешно :)

Если кто-то сомневается, что я могу каждый из этих прототипо довести до
продакшин состояния -- это его личные проблемы, я не собираюсь метать ссылками
и что-то доказывать, у меня нет для этого времени. Я могу любой из этих
прототипов довести до продакшин состояния и выебать всех по скорости и
популярности, как я выебал все существующие веб фреймворки (пока только по
скорости). Пытаться советовать мне писать на Clojure/Haskell бессмысленно,
потому что мы хотим что бы люди которые пишут на PHP и Ruby имели возможность
быстро в 4 клика попробовать Эрланг. Зачем им предлагать LISP, у нас в
функциональном мире и так проблемы с популурязацией. Динамический Эрланг больше
всего похож на гавно-кид-скриптинг, а вы предлагаете мне ПХПешнику предложить
писать на кложе. Вы просто не понимаете наших мотивов. На Clojure расширение
функционального сознания для масс точно не сделаешь, на Эрланге -- это тоже под
сомнением, но мне кажется что возмжно и я это хочу попробовать и именно это
основая мысль нашего Erlang PaaS.

И последнее: нет языка который бы мне нравился и ближайший это ML а не LISP.

